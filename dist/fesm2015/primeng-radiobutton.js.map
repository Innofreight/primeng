{"version":3,"file":"primeng-radiobutton.js","sources":["../../src/app/components/radiobutton/radiobutton.ts","../../src/app/components/radiobutton/primeng-radiobutton.ts"],"sourcesContent":["import {NgModule,Component,Input,Output,ElementRef,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy, Injectable, Injector, OnInit, OnDestroy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, NgControl} from '@angular/forms';\r\n\r\nexport const RADIO_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RadioButton),\r\n    multi: true\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RadioControlRegistry {\r\n    private accessors: any[] = [];\r\n\r\n    add(control: NgControl, accessor: RadioButton) {\r\n        this.accessors.push([control, accessor]);\r\n    }\r\n\r\n    remove(accessor: RadioButton) {\r\n        this.accessors = this.accessors.filter((c) => {\r\n            return c[1] !== accessor;\r\n        })\r\n    }\r\n\r\n    select(accessor: RadioButton) {\r\n        this.accessors.forEach((c) => {\r\n            if (this.isSameGroup(c, accessor) && c[1] !== accessor) {\r\n                c[1].writeValue(accessor.value);\r\n            }\r\n        });\r\n    }\r\n\r\n    private isSameGroup(controlPair: [NgControl, RadioButton], accessor: RadioButton): boolean {\r\n        if (!controlPair[0].control) {\r\n            return false;\r\n        }\r\n\r\n        return controlPair[0].control.root === accessor.control.control.root && controlPair[1].name === accessor.name;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-radioButton',\r\n    template: `\r\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-radiobutton p-component':true,'p-radiobutton-checked': checked, 'p-radiobutton-disabled': disabled, 'p-radiobutton-focused': focused}\" [class]=\"styleClass\">\r\n            <div class=\"p-hidden-accessible\">\r\n                <input #rb type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.value]=\"value\" [attr.tabindex]=\"tabindex\" [attr.aria-checked]=\"checked\" [attr.aria-label]=\"ariaLabel\"\r\n                    [attr.aria-labelledby]=\"ariaLabelledBy\" [checked]=\"checked\" (change)=\"onChange($event)\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\">\r\n            </div>\r\n            <div (click)=\"handleClick($event, rb, true)\" [ngClass]=\"{'p-radiobutton-box':true, 'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\">\r\n                <span class=\"p-radiobutton-icon\"></span>\r\n            </div>\r\n        </div>\r\n        <label (click)=\"select($event)\" [class]=\"labelStyleClass\"\r\n            [ngClass]=\"{'p-radiobutton-label':true, 'p-radiobutton-label-active':rb.checked, 'p-disabled':disabled, 'p-radiobutton-label-focus':focused}\"\r\n            *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\r\n    `,\r\n    providers: [RADIO_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RadioButton implements ControlValueAccessor, OnInit, OnDestroy {\r\n\r\n    @Input() value: any;\r\n\r\n    @Input() formControlName: string;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() label: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n\r\n    @Input() ariaLabel: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() labelStyleClass: string;\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild('rb') inputViewChild: ElementRef;\r\n\r\n    public onModelChange: Function = () => {};\r\n\r\n    public onModelTouched: Function = () => {};\r\n\r\n    public checked: boolean;\r\n\r\n    public focused: boolean;\r\n\r\n    control: NgControl;\r\n\r\n    constructor(public cd: ChangeDetectorRef, private injector: Injector, private registry: RadioControlRegistry) {}\r\n\r\n    ngOnInit() {\r\n        this.control = this.injector.get(NgControl);\r\n        this.checkName();\r\n        this.registry.add(this.control, this);\r\n    }\r\n    \r\n    handleClick(event, radioButton, focus) {\r\n        event.preventDefault();\r\n\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.select(event);\r\n\r\n        if (focus) {\r\n            radioButton.focus();\r\n        }\r\n    }\r\n    \r\n    select(event) {\r\n        if (!this.disabled) {\r\n            this.inputViewChild.nativeElement.checked = true;\r\n            this.checked = true;\r\n            this.onModelChange(this.value);\r\n            this.registry.select(this);\r\n            this.onClick.emit(event);\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) : void {\r\n        this.checked = (value == this.value);\r\n\r\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\r\n            this.inputViewChild.nativeElement.checked = this.checked;\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    onInputFocus(event) {\r\n        this.focused = true;\r\n        this.onFocus.emit(event);\r\n    }\r\n\r\n    onInputBlur(event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n        this.onBlur.emit(event);\r\n    }\r\n\r\n    onChange(event) {\r\n        this.select(event);\r\n    }\r\n\r\n    focus() {\r\n        this.inputViewChild.nativeElement.focus();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.registry.remove(this);\r\n    }\r\n\r\n    private checkName() {\r\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\r\n            this.throwNameError();\r\n        }\r\n        if (!this.name && this.formControlName) {\r\n            this.name = this.formControlName;\r\n        }\r\n    }\r\n\r\n    private throwNameError() {\r\n        throw new Error(`\r\n          If you define both a name and a formControlName attribute on your radio button, their values\r\n          must match. Ex: <p-radioButton formControlName=\"food\" name=\"food\"></p-radioButton>\r\n        `);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [RadioButton],\r\n    declarations: [RadioButton]\r\n})\r\nexport class RadioButtonModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}