{"version":3,"sources":["../../src/app/components/virtualscroller/virtualscroller.ts"],"names":["VirtualScroller","el","this","delay","trackBy","index","item","onLazyLoad","EventEmitter","_totalRecords","page","_first","Object","defineProperty","prototype","val","console","log","_cache","ngAfterContentInit","_this","templates","forEach","getType","itemTemplate","template","loadingItemTemplate","headerTemplate","footerTemplate","onScrollIndexChange","lazy","virtualScrollTimeout","clearTimeout","setTimeout","Math","floor","rows","virtualScrollOffset","virtualScrollChunkSize","virtualPage","emit","first","getBlockableElement","nativeElement","children","scrollTo","mode","scrollToIndex","viewport","Component","args","selector","changeDetection","ChangeDetectionStrategy","Default","encapsulation","ViewEncapsulation","None","ElementRef","Input","ContentChild","Header","Footer","ContentChildren","PrimeTemplate","ViewChild","CdkVirtualScrollViewport","Output","NgModule","imports","CommonModule","ScrollingModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterContentInit,Input,Output,ViewChild,EventEmitter,ContentChild,ContentChildren,QueryList,TemplateRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {Header,Footer,PrimeTemplate,SharedModule} from 'primeng/api';\r\nimport {ScrollingModule,CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\r\nimport {BlockableUI} from 'primeng/api';\r\n\r\n@Component({\r\n    selector: 'p-virtualScroller',\r\n    template:`\r\n        <div [ngClass]=\"'p-virtualscroller p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"p-virtualscroller-header\" *ngIf=\"header || headerTemplate\">\r\n                <ng-content select=\"p-header\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n            </div>\r\n            <div #content class=\"p-virtualscroller-content\">\r\n                <div class=\"p-virtualscroller-list\">\r\n                    <cdk-virtual-scroll-viewport #viewport [ngStyle]=\"{'height': scrollHeight}\" tabindex=\"0\" [itemSize]=\"itemSize\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\">\r\n                        <ng-container *cdkVirtualFor=\"let item of value; trackBy: trackBy; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd;\">\r\n                            <div [ngStyle]=\"{'height': itemSize + 'px'}\" class=\"p-virtualscroller-item\">\r\n                                <ng-container *ngTemplateOutlet=\"item ? itemTemplate : loadingItemTemplate; context: {$implicit: item, index: i, count: c, first: f, last: l, even: e, odd: o}\"></ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </cdk-virtual-scroll-viewport>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-virtualscroller-footer\" *ngIf=\"footer || footerTemplate\">\r\n                <ng-content select=\"p-footer\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n            </div>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./virtualscroller.css']\r\n})\r\nexport class VirtualScroller implements AfterContentInit,BlockableUI {\r\n\r\n    @Input() value: any[];\r\n\r\n    @Input() itemSize: number; \r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() scrollHeight: any;\r\n\r\n    @Input() lazy: boolean;\r\n\r\n    @Input() rows: number;\r\n\r\n    @Input() minBufferPx: number;\r\n\r\n    @Input() maxBufferPx: number;\r\n\r\n    @Input() delay: number = 250;\r\n  \r\n    @Input() trackBy: Function = (index: number, item: any) => item;\r\n                \r\n    @ContentChild(Header) header: Header;\r\n\r\n    @ContentChild(Footer) footer: Footer;\r\n    \r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\r\n\r\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\r\n\r\n    itemTemplate: TemplateRef<any>;\r\n\r\n    headerTemplate: TemplateRef<any>;\r\n\r\n    footerTemplate: TemplateRef<any>;\r\n\r\n    loadingItemTemplate: TemplateRef<any>;\r\n\r\n    _totalRecords: number = 0;\r\n\r\n    page: number = 0;\r\n\r\n    _first: number = 0;\r\n\r\n    _cache: boolean;\r\n\r\n    virtualScrollTimeout: any;\r\n\r\n    virtualPage: number;\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    @Input() get totalRecords(): number {\r\n        return this._totalRecords;\r\n    }\r\n    set totalRecords(val: number) {\r\n        this._totalRecords = val;\r\n        console.log(\"totalRecords is deprecated, provide a value with the length of virtual items instead.\");\r\n    }\r\n\r\n    @Input() get first(): number {\r\n        return this._first;\r\n    }\r\n    set first(val:number) {\r\n        this._first = val;\r\n        console.log(\"first property is deprecated, use scrollToIndex function to scroll a specific item.\");\r\n    }\r\n\r\n    @Input() get cache(): boolean {\r\n        return this._cache;\r\n    }\r\n    set cache(val: boolean) {\r\n        this._cache = val;\r\n        console.log(\"cache is deprecated as it is always on.\");\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'item':\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n\r\n                case 'loadingItem':\r\n                    this.loadingItemTemplate = item.template;\r\n                break;\r\n\r\n                case 'header':\r\n                    this.headerTemplate = item.template;\r\n                break;\r\n\r\n                case 'footer':\r\n                    this.footerTemplate = item.template;\r\n                break;\r\n                \r\n                default:\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    onScrollIndexChange(index: number) {\r\n        if (this.lazy) {\r\n            if (this.virtualScrollTimeout) {\r\n                clearTimeout(this.virtualScrollTimeout);\r\n            }\r\n\r\n            this.virtualScrollTimeout = setTimeout(() => {\r\n                let page = Math.floor(index / this.rows);\r\n                let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.rows;\r\n                let virtualScrollChunkSize = page === 0 ? this.rows * 2 : this.rows * 3;\r\n  \r\n                if (page !== this.virtualPage) {\r\n                    this.virtualPage = page;\r\n                    this.onLazyLoad.emit({first: virtualScrollOffset, rows: virtualScrollChunkSize});\r\n                }\r\n            }, this.delay);\r\n        }\r\n    }\r\n\r\n    getBlockableElement(): HTMLElementÂ {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n\r\n    //@deprecated\r\n    scrollTo(index: number, mode?: ScrollBehavior): void {\r\n        this.scrollToIndex(index, mode);\r\n    }\r\n\r\n    scrollToIndex(index: number, mode?: ScrollBehavior): void {\r\n        if (this.viewport) {\r\n            this.viewport.scrollToIndex(index, mode);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ScrollingModule],\r\n    exports: [VirtualScroller,SharedModule,ScrollingModule],\r\n    declarations: [VirtualScroller]\r\n})\r\nexport class VirtualScrollerModule { }\r\n\r\n"]}