{"version":3,"file":"primeng-button.umd.js","sources":["../../src/app/components/button/button.ts","../../src/app/components/button/primeng-button.ts"],"sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, AfterContentInit, TemplateRef, QueryList} from '@angular/core';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RippleModule} from 'primeng/ripple'; \r\nimport {PrimeTemplate} from 'primeng/api'; \r\n\r\n@Directive({\r\n    selector: '[pButton]'\r\n})\r\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\r\n            \r\n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\r\n\r\n    public _label: string;\r\n    \r\n    public _icon: string;\r\n\r\n    public _loading: boolean = false;\r\n            \r\n    public initialized: boolean;\r\n    \r\n    public _initialStyleClass: string;\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngAfterViewInit() {\r\n        this._initialStyleClass = this.el.nativeElement.className;\r\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\r\n\r\n        if (this.icon) {\r\n            this.createIconEl();\r\n        }\r\n        \r\n        let labelElement = document.createElement(\"span\");\r\n        if (this.icon && !this.label) {\r\n            labelElement.setAttribute('aria-hidden', 'true');\r\n        }\r\n        labelElement.className = 'p-button-label';\r\n\r\n        if (this.label)\r\n            labelElement.appendChild(document.createTextNode(this.label));\r\n        else \r\n            labelElement.innerHTML = '&nbsp;';\r\n        \r\n        this.el.nativeElement.appendChild(labelElement);\r\n        this.initialized = true;\r\n    }\r\n        \r\n    getStyleClass(): string {\r\n        let styleClass = 'p-button p-component';\r\n        if (this.icon && !this.label) {\r\n            styleClass = styleClass + ' p-button-icon-only';\r\n        }\r\n\r\n        if (this.loading) {\r\n            styleClass = styleClass + ' p-disabled p-button-loading';\r\n            if (!this.icon && this.label)\r\n                styleClass = styleClass + ' p-button-loading-label-only';\r\n        }\r\n        \r\n        return styleClass;\r\n    }\r\n\r\n    setStyleClass() {\r\n        let styleClass = this.getStyleClass();\r\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\r\n    }\r\n\r\n    createIconEl() {\r\n        let iconElement = document.createElement(\"span\");\r\n        iconElement.className = 'p-button-icon';\r\n        iconElement.setAttribute(\"aria-hidden\", \"true\");\r\n        let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\r\n        \r\n        if (iconPosClass) {\r\n            DomHandler.addClass(iconElement, iconPosClass);\r\n        }\r\n\r\n        DomHandler.addMultipleClasses(iconElement, this.getIconClass());\r\n        let labelEl = DomHandler.findSingle(this.el.nativeElement, '.p-button-label')\r\n\r\n        if (labelEl)\r\n            this.el.nativeElement.insertBefore(iconElement, labelEl);\r\n        else\r\n            this.el.nativeElement.appendChild(iconElement)\r\n    }\r\n\r\n    getIconClass() {\r\n        return this.loading ? 'p-button-loading-icon ' + this.loadingIcon : this._icon;\r\n    }\r\n\r\n    setIconClass() {\r\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\r\n        if (iconElement) {\r\n            if (this.iconPos) \r\n                iconElement.className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this.getIconClass();\r\n            else \r\n                iconElement.className = 'p-button-icon ' + this.getIconClass();\r\n        }\r\n        else {\r\n            this.createIconEl();\r\n        }\r\n    }\r\n\r\n    removeIconElement() {\r\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\r\n        this.el.nativeElement.removeChild(iconElement)\r\n    }\r\n    \r\n    @Input() get label(): string {\r\n        return this._label;\r\n    }\r\n\r\n    set label(val: string) {\r\n        this._label = val;\r\n        \r\n        if (this.initialized) {\r\n            DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\r\n            this.setStyleClass();\r\n        }\r\n    }\r\n    \r\n    @Input() get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(val: string) {\r\n        this._icon = val;\r\n        \r\n        if (this.initialized) {\r\n            this.setIconClass();\r\n            this.setStyleClass();\r\n        }\r\n    }\r\n\r\n    @Input() get loading(): boolean {\r\n        return this._loading;\r\n    }\r\n\r\n    set loading(val: boolean) {\r\n        this._loading = val;\r\n        \r\n        if (this.initialized) {\r\n            if (this.loading || this.icon)\r\n                this.setIconClass();\r\n            else \r\n                this.removeIconElement();\r\n            \r\n            this.setStyleClass();\r\n        }\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-button',\r\n    template: `\r\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled || loading\"\r\n            [ngClass]=\"{'p-button p-component':true,\r\n                        'p-button-icon-only': (icon && !label),\r\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\r\n                        'p-disabled': this.disabled || this.loading,\r\n                        'p-button-loading': this.loading,\r\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\"\r\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\r\n            <ng-content></ng-content>\r\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n            <span [ngClass]=\"{'p-button-icon': true,\r\n                        'p-button-icon-left': iconPos === 'left' && label,\r\n                        'p-button-icon-right': iconPos === 'right' && label,\r\n                        'p-button-icon-top': iconPos === 'top' && label,\r\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\r\n                        [class]=\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\" *ngIf=\"!contentTemplate && (icon||loading)\" [attr.aria-hidden]=\"true\"></span>\r\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate\">{{label||'&nbsp;'}}</span>\r\n            <span [ngClass]=\"badgeStyleClass()\" [class]=\"badgeClass\" *ngIf=\"!contentTemplate && badge\">{{badge}}</span>\r\n        </button>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class Button implements AfterContentInit {\r\n\r\n    @Input() type: string = \"button\";\r\n\r\n    @Input() iconPos: string = 'left';\r\n\r\n    @Input() icon: string;\r\n\r\n    @Input() badge: string;\r\n\r\n    @Input() label: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() loading: boolean = false;\r\n\r\n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() badgeClass: string;\r\n\r\n    contentTemplate: TemplateRef<any>;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n                \r\n                default:\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    badgeStyleClass() {\r\n        return {\r\n            'p-badge p-component': true,\r\n            'p-badge-no-gutter': this.badge && String(this.badge).length === 1\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RippleModule],\r\n    exports: [ButtonDirective,Button],\r\n    declarations: [ButtonDirective,Button]\r\n})\r\nexport class ButtonModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["DomHandler","Directive","ElementRef","Input","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChildren","PrimeTemplate","Output","NgModule","CommonModule","RippleModule"],"mappings":"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"}