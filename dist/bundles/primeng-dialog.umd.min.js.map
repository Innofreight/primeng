{"version":3,"sources":["../../src/app/components/dialog/dialog.ts"],"names":["showAnimation","animation","style","transform","opacity","animate","hideAnimation","Dialog","el","renderer","zone","cd","this","draggable","resizable","closeOnEscape","closable","showHeader","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","keepInViewport","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","onResizeInit","onResizeEnd","onDragEnd","onMaximize","id","UniqueComponentId","_style","_position","transformOptions","Object","defineProperty","prototype","_positionLeft","console","log","_positionTop","_responsive","_breakpoint","ngAfterContentInit","_this","templates","forEach","item","getType","headerTemplate","template","contentTemplate","footerTemplate","ngOnInit","breakpoints","createStyle","_visible","value","maskVisible","assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","close","event","emit","preventDefault","enableModality","dismissableMask","maskClickListener","listen","wrapper","isSameNode","target","modal","addClass","document","body","disableModality","unbindMaskClickListener","removeClass","destroyed","detectChanges","maximize","maximized","moveOnTop","zIndex","String","zindex","styleElement","createElement","type","head","appendChild","innerHTML","breakpoint","initDrag","hasClass","parentElement","dragging","lastPageX","pageX","lastPageY","pageY","margin","onKeydown","which","focusableElements","getFocusableElements","length","ownerDocument","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","getOuterWidth","containerHeight","getOuterHeight","deltaX","deltaY","offset","getOffset","leftPos","left","topPos","top","viewport","getViewport","position","width","height","endDrag","resetPosition","center","initResize","resizing","onResize","contentHeight","contentViewChild","nativeElement","newWidth","newHeight","minWidth","minHeight","parseInt","resizeEnd","bindGlobalListeners","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentEscapeListener","documentDragListener","bind","window","addEventListener","removeEventListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentTarget","documentEscapeListener","appendContainer","appendTo","restoreAppend","onAnimationStart","toState","element","setAttribute","onAnimationEnd","onContainerDestroy","destroyStyle","removeChild","ngOnDestroy","Component","args","selector","animations","trigger","transition","useAnimation","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","NgZone","ChangeDetectorRef","Input","ContentChild","Header","Footer","ContentChildren","PrimeTemplate","ViewChild","Output","NgModule","imports","CommonModule","FocusTrapModule","RippleModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\r\n    ContentChildren,QueryList,ViewChild,NgZone, ChangeDetectorRef,ViewRef,ChangeDetectionStrategy, ViewEncapsulation, AfterContentInit, TemplateRef, ContentChild, OnInit} from '@angular/core';\r\nimport {trigger,style,transition,animate, AnimationEvent, animation, useAnimation} from '@angular/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {Header,Footer,SharedModule, PrimeTemplate} from 'primeng/api';\r\nimport {FocusTrapModule} from 'primeng/focustrap';\r\nimport {RippleModule} from 'primeng/ripple';\r\nimport {UniqueComponentId} from 'primeng/utils';\r\n\r\nconst showAnimation = animation([\r\n    style({ transform: '{{transform}}', opacity: 0 }),\r\n    animate('{{transition}}')\r\n]);\r\n\r\nconst hideAnimation = animation([\r\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\r\n]);\r\n\r\n@Component({\r\n    selector: 'p-dialog',\r\n    template: `\r\n        <div *ngIf=\"maskVisible\" [class]=\"maskStyleClass\"\r\n            [ngClass]=\"{'p-dialog-mask': true, 'p-component-overlay': this.modal, 'p-dialog-mask-scrollblocker': this.modal || this.blockScroll,\r\n                'p-dialog-left': position === 'left',\r\n                'p-dialog-right': position === 'right',\r\n                'p-dialog-top': position === 'top',\r\n                'p-dialog-top-left': position === 'topleft' || position === 'top-left',\r\n                'p-dialog-top-right': position === 'topright' || position === 'top-right',\r\n                'p-dialog-bottom': position === 'bottom',\r\n                'p-dialog-bottom-left': position === 'bottomleft' || position === 'bottom-left',\r\n                'p-dialog-bottom-right': position === 'bottomright' || position === 'bottom-right'}\">\r\n            <div #container [ngClass]=\"{'p-dialog p-component':true, 'p-dialog-rtl':rtl,'p-dialog-draggable':draggable,'p-dialog-resizable':resizable, 'p-dialog-maximized': maximized}\"\r\n                [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\" pFocusTrap [pFocusTrapDisabled]=\"focusTrap === false\"\r\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\r\n                <div #titlebar class=\"p-dialog-header\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\r\n                    <span [attr.id]=\"id + '-label'\" class=\"p-dialog-title\" *ngIf=\"header\">{{header}}</span>\r\n                    <span [attr.id]=\"id + '-label'\" class=\"p-dialog-title\" *ngIf=\"headerFacet\">\r\n                        <ng-content select=\"p-header\"></ng-content>\r\n                    </span>\r\n                    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n                    <div class=\"p-dialog-header-icons\">\r\n                        <button *ngIf=\"maximizable\" type=\"button\" [ngClass]=\"{'p-dialog-header-icon p-dialog-header-maximize p-link':true}\" (click)=\"maximize()\" (keydown.enter)=\"maximize()\" tabindex=\"-1\" pRipple>\r\n                            <span class=\"p-dialog-header-maximize-icon\" [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\r\n                        </button>\r\n                        <button *ngIf=\"closable\" type=\"button\" [ngClass]=\"{'p-dialog-header-icon p-dialog-header-close p-link':true}\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\" tabindex=\"-1\" pRipple>\r\n                            <span class=\"p-dialog-header-close-icon\" [ngClass]=\"closeIcon\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div #content [ngClass]=\"'p-dialog-content'\" [ngStyle]=\"contentStyle\" [class]=\"contentStyleClass\">\r\n                    <ng-content></ng-content>\r\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n                </div>\r\n                <div #footer class=\"p-dialog-footer\" *ngIf=\"footerFacet || footerTemplate\">\r\n                    <ng-content select=\"p-footer\"></ng-content>\r\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n                </div>\r\n                <div *ngIf=\"resizable\" class=\"p-resizable-handle\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('animation', [\r\n            transition('void => visible', [\r\n                useAnimation(showAnimation)\r\n            ]),\r\n            transition('visible => void', [\r\n                useAnimation(hideAnimation)\r\n            ])\r\n        ])\r\n    ],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['../dialog/dialog.css']\r\n})\r\nexport class Dialog implements AfterContentInit,OnInit,OnDestroy {\r\n\r\n    @Input() header: string;\r\n\r\n    @Input() draggable: boolean = true;\r\n\r\n    @Input() resizable: boolean = true;\r\n\r\n    @Input() get positionLeft(): number {\r\n        return 0;\r\n    };\r\n\r\n    set positionLeft(_positionLeft: number) {\r\n        console.log(\"positionLeft property is deprecated.\");\r\n    }\r\n\r\n    @Input() get positionTop(): number {\r\n        return 0;\r\n    };\r\n\r\n    set positionTop(_positionTop: number) {\r\n        console.log(\"positionTop property is deprecated.\");\r\n    }\r\n\r\n    @Input() contentStyle: any;\r\n\r\n    @Input() contentStyleClass: string;\r\n\r\n    @Input() modal: boolean;\r\n\r\n    @Input() closeOnEscape: boolean = true;\r\n\r\n    @Input() dismissableMask: boolean;\r\n\r\n    @Input() rtl: boolean;\r\n\r\n    @Input() closable: boolean = true;\r\n\r\n    @Input() get responsive(): boolean {\r\n        return false;\r\n    };\r\n\r\n    set responsive(_responsive: boolean) {\r\n        console.log(\"Responsive property is deprecated.\");\r\n    }\r\n\r\n    @Input() appendTo: any;\r\n\r\n    @Input() breakpoints: any[];\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() maskStyleClass: string;\r\n\r\n    @Input() showHeader: boolean = true;\r\n\r\n    @Input() get breakpoint(): number {\r\n        return 649;\r\n    };\r\n\r\n    set breakpoint(_breakpoint: number) {\r\n        console.log(\"Breakpoint property is not utilized and deprecated, use breakpoints or CSS media queries instead.\");\r\n    }\r\n\r\n    @Input() blockScroll: boolean = false;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @Input() minX: number = 0;\r\n\r\n    @Input() minY: number = 0;\r\n\r\n    @Input() focusOnShow: boolean = true;\r\n\r\n    @Input() maximizable: boolean;\r\n\r\n    @Input() keepInViewport: boolean = true;\r\n\r\n    @Input() focusTrap: boolean = true;\r\n\r\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\r\n\r\n    @Input() closeIcon: string = 'pi pi-times';\r\n\r\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\r\n\r\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\r\n\r\n    @ContentChild(Header) headerFacet: QueryList<Header>;\r\n\r\n    @ContentChild(Footer) footerFacet: QueryList<Footer>;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @ViewChild('titlebar') headerViewChild: ElementRef;\r\n\r\n    @ViewChild('content') contentViewChild: ElementRef;\r\n\r\n    @ViewChild('footer') footerViewChild: ElementRef;\r\n\r\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onMaximize: EventEmitter<any> = new EventEmitter();\r\n\r\n    headerTemplate: TemplateRef<any>;\r\n\r\n    contentTemplate: TemplateRef<any>;\r\n\r\n    footerTemplate: TemplateRef<any>;\r\n\r\n    _visible: boolean;\r\n\r\n    maskVisible: boolean;\r\n\r\n    container: HTMLDivElement;\r\n\r\n    wrapper: HTMLElement;\r\n\r\n    dragging: boolean;\r\n\r\n    documentDragListener: any;\r\n\r\n    documentDragEndListener: any;\r\n\r\n    resizing: boolean;\r\n\r\n    documentResizeListener: any;\r\n\r\n    documentResizeEndListener: any;\r\n\r\n    documentEscapeListener: Function;\r\n\r\n    maskClickListener: Function;\r\n\r\n    lastPageX: number;\r\n\r\n    lastPageY: number;\r\n\r\n    preventVisibleChangePropagation: boolean;\r\n\r\n    maximized: boolean;\r\n\r\n    preMaximizeContentHeight: number;\r\n\r\n    preMaximizeContainerWidth: number;\r\n\r\n    preMaximizeContainerHeight: number;\r\n\r\n    preMaximizePageX: number;\r\n\r\n    preMaximizePageY: number;\r\n\r\n    id: string = UniqueComponentId();\r\n\r\n    _style: any = {};\r\n\r\n    _position: string = \"center\";\r\n\r\n    originalStyle: any;\r\n\r\n    transformOptions: any = \"scale(0.7)\";\r\n\r\n    styleElement: any;\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone, private cd: ChangeDetectorRef) { }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'header':\r\n                    this.headerTemplate = item.template;\r\n                break;\r\n\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n\r\n                case 'footer':\r\n                    this.footerTemplate = item.template;\r\n                break;\r\n\r\n                default:\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.breakpoints) {\r\n            this.createStyle();\r\n        }\r\n    }\r\n\r\n    @Input() get visible(): any {\r\n        return this._visible;\r\n    }\r\n    set visible(value:any) {\r\n        this._visible = value;\r\n\r\n        if (this._visible && !this.maskVisible) {\r\n            this.maskVisible = true;\r\n        }\r\n    }\r\n\r\n    @Input() get style(): any {\r\n        return this._style;\r\n    }\r\n    set style(value:any) {\r\n        if (value) {\r\n            this._style = {...value};\r\n            this.originalStyle = value;\r\n        }\r\n    }\r\n\r\n    @Input() get position(): string {\r\n        return this._position;\r\n    };\r\n\r\n    set position(value: string) {\r\n        this._position = value;\r\n\r\n        switch (value) {\r\n            case 'topleft':\r\n            case 'bottomleft':\r\n            case 'left':\r\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\r\n            break;\r\n            case 'topright':\r\n            case 'bottomright':\r\n            case 'right':\r\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\r\n            break;\r\n            case 'bottom':\r\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\r\n            break;\r\n            case 'top':\r\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\r\n            break;\r\n            default:\r\n                this.transformOptions = \"scale(0.7)\";\r\n            break;\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        let focusable = DomHandler.findSingle(this.container, '[autofocus]');\r\n        if (focusable) {\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => focusable.focus(), 5);\r\n            });\r\n        }\r\n    }\r\n\r\n    close(event: Event) {\r\n        this.visibleChange.emit(false);\r\n        event.preventDefault();\r\n    }\r\n\r\n    enableModality() {\r\n        if (this.closable && this.dismissableMask) {\r\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'mousedown', (event: any) => {\r\n                if (this.wrapper && this.wrapper.isSameNode(event.target)) {\r\n                    this.close(event);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.modal) {\r\n            DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n        }\r\n    }\r\n\r\n    disableModality() {\r\n        if (this.wrapper) {\r\n            if (this.dismissableMask) {\r\n                this.unbindMaskClickListener();\r\n            }\r\n\r\n            if (this.modal) {\r\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n            }\r\n\r\n            if (!(this.cd as ViewRef).destroyed) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    maximize() {\r\n        this.maximized = !this.maximized;\r\n\r\n        if (!this.modal && !this.blockScroll) {\r\n            if (this.maximized)\r\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n            else\r\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n        }\r\n\r\n        this.onMaximize.emit({'maximized': this.maximized});\r\n    }\r\n\r\n    unbindMaskClickListener() {\r\n        if (this.maskClickListener) {\r\n            this.maskClickListener();\r\n            this.maskClickListener = null;\r\n        }\r\n    }\r\n\r\n    moveOnTop() {\r\n        if (this.autoZIndex) {\r\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\r\n        }\r\n    }\r\n\r\n    createStyle() {\r\n        if (!this.styleElement) {\r\n            this.styleElement = document.createElement('style');\r\n            this.styleElement.type = 'text/css';\r\n            document.head.appendChild(this.styleElement);\r\n            let innerHTML = '';\r\n            for (let breakpoint in this.breakpoints) {\r\n                innerHTML += `\r\n                    @media screen and (max-width: ${breakpoint}) {\r\n                        .p-dialog[${this.id}] {\r\n                            width: ${this.breakpoints[breakpoint]} !important;\r\n                        }\r\n                    }\r\n                `\r\n            }\r\n            \r\n            this.styleElement.innerHTML = innerHTML;\r\n        }\r\n    }\r\n\r\n    initDrag(event: MouseEvent) {\r\n        if (DomHandler.hasClass(event.target, 'p-dialog-header-icon') || DomHandler.hasClass((<HTMLElement> event.target).parentElement, 'p-dialog-header-icon')) {\r\n            return;\r\n        }\r\n\r\n        if (this.draggable) {\r\n            this.dragging = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n\r\n            this.container.style.margin = '0';\r\n            DomHandler.addClass(document.body, 'p-unselectable-text');\r\n        }\r\n    }\r\n\r\n    onKeydown(event: KeyboardEvent) {\r\n        if (this.focusTrap) {\r\n            if (event.which === 9) {\r\n                event.preventDefault();\r\n\r\n                let focusableElements = DomHandler.getFocusableElements(this.container);\r\n\r\n                if (focusableElements && focusableElements.length > 0) {\r\n                    if (!focusableElements[0].ownerDocument.activeElement) {\r\n                        focusableElements[0].focus();\r\n                    }\r\n                    else {\r\n                        let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\r\n\r\n                        if (event.shiftKey) {\r\n                            if (focusedIndex == -1 || focusedIndex === 0)\r\n                                focusableElements[focusableElements.length - 1].focus();\r\n                            else\r\n                                focusableElements[focusedIndex - 1].focus();\r\n                        }\r\n                        else {\r\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\r\n                                focusableElements[0].focus();\r\n                            else\r\n                                focusableElements[focusedIndex + 1].focus();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDrag(event: MouseEvent) {\r\n        if (this.dragging) {\r\n            let containerWidth = DomHandler.getOuterWidth(this.container);\r\n            let containerHeight = DomHandler.getOuterHeight(this.container);\r\n            let deltaX = event.pageX - this.lastPageX;\r\n            let deltaY = event.pageY - this.lastPageY;\r\n            let offset = DomHandler.getOffset(this.container);\r\n            let leftPos = offset.left + deltaX;\r\n            let topPos = offset.top + deltaY;\r\n            let viewport = DomHandler.getViewport();\r\n\r\n            this.container.style.position = 'fixed';\r\n\r\n            if (this.keepInViewport) {\r\n                if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\r\n                    this._style.left = leftPos + 'px';\r\n                    this.lastPageX = event.pageX;\r\n                    this.container.style.left = leftPos + 'px';\r\n                }\r\n\r\n                if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\r\n                    this._style.top = topPos + 'px';\r\n                    this.lastPageY = event.pageY;\r\n                    this.container.style.top = topPos + 'px';\r\n                }\r\n            }\r\n            else {\r\n                this.lastPageX = event.pageX;\r\n                this.container.style.left = leftPos + 'px';\r\n                this.lastPageY = event.pageY;\r\n                this.container.style.top = topPos + 'px';\r\n            }\r\n        }\r\n    }\r\n\r\n    endDrag(event: MouseEvent) {\r\n        if (this.dragging) {\r\n            this.dragging = false;\r\n            DomHandler.removeClass(document.body, 'p-unselectable-text');\r\n            this.cd.detectChanges();\r\n            this.onDragEnd.emit(event);\r\n        }\r\n    }\r\n\r\n    resetPosition() {\r\n        this.container.style.position = '';\r\n        this.container.style.left = '';\r\n        this.container.style.top = '';\r\n        this.container.style.margin = '';\r\n    }\r\n\r\n    //backward compatibility\r\n    center() {\r\n        this.resetPosition();\r\n    }\r\n\r\n    initResize(event: MouseEvent) {\r\n        if (this.resizable) {\r\n            this.resizing = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n            DomHandler.addClass(document.body, 'p-unselectable-text');\r\n            this.onResizeInit.emit(event);\r\n        }\r\n    }\r\n\r\n    onResize(event: MouseEvent) {\r\n        if (this.resizing) {\r\n            let deltaX = event.pageX - this.lastPageX;\r\n            let deltaY = event.pageY - this.lastPageY;\r\n            let containerWidth = DomHandler.getOuterWidth(this.container);\r\n            let containerHeight = DomHandler.getOuterHeight(this.container);\r\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\r\n            let newWidth = containerWidth + deltaX;\r\n            let newHeight = containerHeight + deltaY;\r\n            let minWidth = this.container.style.minWidth;\r\n            let minHeight = this.container.style.minHeight;\r\n            let offset = DomHandler.getOffset(this.container);\r\n            let viewport = DomHandler.getViewport();\r\n            let hasBeenDragged = !parseInt(this.container.style.top) || !parseInt(this.container.style.left);\r\n\r\n            if (hasBeenDragged) {\r\n                newWidth += deltaX;\r\n                newHeight += deltaY;\r\n            }\r\n\r\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\r\n                this._style.width = newWidth + 'px';\r\n                this.container.style.width = this._style.width;\r\n            }\r\n\r\n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\r\n                this.contentViewChild.nativeElement.style.height = contentHeight + newHeight - containerHeight + 'px';\r\n\r\n                if (this._style.height) {\r\n                    this._style.height = newHeight + 'px';\r\n                    this.container.style.height = this._style.height;\r\n                }\r\n            }\r\n\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n        }\r\n    }\r\n\r\n    resizeEnd(event) {\r\n        if (this.resizing) {\r\n            this.resizing = false;\r\n            DomHandler.removeClass(document.body, 'p-unselectable-text');\r\n            this.onResizeEnd.emit(event);\r\n        }\r\n    }\r\n\r\n    bindGlobalListeners() {\r\n        if (this.draggable) {\r\n            this.bindDocumentDragListener();\r\n            this.bindDocumentDragEndListener();\r\n        }\r\n\r\n        if (this.resizable) {\r\n            this.bindDocumentResizeListeners();\r\n        }\r\n\r\n        if (this.closeOnEscape && this.closable) {\r\n            this.bindDocumentEscapeListener();\r\n        }\r\n    }\r\n\r\n    unbindGlobalListeners() {\r\n        this.unbindDocumentDragListener();\r\n        this.unbindDocumentDragEndListener();\r\n        this.unbindDocumentResizeListeners();\r\n        this.unbindDocumentEscapeListener();\r\n    }\r\n\r\n    bindDocumentDragListener() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.documentDragListener = this.onDrag.bind(this);\r\n            window.document.addEventListener('mousemove', this.documentDragListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentDragListener() {\r\n        if (this.documentDragListener) {\r\n            window.document.removeEventListener('mousemove', this.documentDragListener);\r\n            this.documentDragListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentDragEndListener() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.documentDragEndListener = this.endDrag.bind(this);\r\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentDragEndListener() {\r\n        if (this.documentDragEndListener) {\r\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\r\n            this.documentDragEndListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentResizeListeners() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.documentResizeListener = this.onResize.bind(this);\r\n            this.documentResizeEndListener = this.resizeEnd.bind(this);\r\n            window.document.addEventListener('mousemove', this.documentResizeListener);\r\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentResizeListeners() {\r\n        if (this.documentResizeListener && this.documentResizeEndListener) {\r\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\r\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\r\n            this.documentResizeListener = null;\r\n            this.documentResizeEndListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentEscapeListener() {\r\n        const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\r\n\r\n        this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', (event) => {\r\n            if (event.which == 27) {\r\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\r\n                    this.close(event);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    unbindDocumentEscapeListener() {\r\n        if (this.documentEscapeListener) {\r\n            this.documentEscapeListener();\r\n            this.documentEscapeListener = null;\r\n        }\r\n    }\r\n\r\n    appendContainer() {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.wrapper);\r\n            else\r\n                DomHandler.appendChild(this.wrapper, this.appendTo);\r\n        }\r\n    }\r\n\r\n    restoreAppend() {\r\n        if (this.container && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.wrapper);\r\n        }\r\n    }\r\n\r\n    onAnimationStart(event: AnimationEvent) {\r\n        switch(event.toState) {\r\n            case 'visible':\r\n                this.container = event.element;\r\n                this.wrapper = this.container.parentElement;\r\n                this.appendContainer();\r\n                this.moveOnTop();\r\n                this.bindGlobalListeners();\r\n                this.container.setAttribute(this.id, '');\r\n\r\n                if (this.modal) {\r\n                    this.enableModality();\r\n                }\r\n\r\n                if (!this.modal && this.blockScroll) {\r\n                    DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n                }\r\n\r\n                if (this.focusOnShow) {\r\n                    this.focus();\r\n                }\r\n            break;\r\n        }\r\n    }\r\n\r\n    onAnimationEnd(event: AnimationEvent) {\r\n        switch(event.toState) {\r\n            case 'void':\r\n                this.onContainerDestroy();\r\n                this.onHide.emit({});\r\n            break;\r\n            case 'visible':\r\n                this.onShow.emit({});\r\n            break;\r\n        }\r\n    }\r\n\r\n    onContainerDestroy() {\r\n        this.unbindGlobalListeners();\r\n        this.dragging = false;\r\n\r\n        this.maskVisible = false;\r\n\r\n        if (this.maximized) {\r\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n            this.maximized = false;\r\n        }\r\n\r\n        if (this.modal) {\r\n            this.disableModality();\r\n        }\r\n\r\n        if (this.blockScroll) {\r\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n        }\r\n\r\n        this.container = null;\r\n        this.wrapper = null;\r\n\r\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\r\n    }\r\n\r\n    destroyStyle() {\r\n        if (this.styleElement) {\r\n            document.head.removeChild(this.styleElement);\r\n            this.styleElement = null;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.container) {\r\n            this.restoreAppend();\r\n            this.onContainerDestroy();\r\n        }\r\n\r\n        this.destroyStyle();\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,FocusTrapModule,RippleModule],\r\n    exports: [Dialog,SharedModule],\r\n    declarations: [Dialog]\r\n})\r\nexport class DialogModule { }\r\n"]}