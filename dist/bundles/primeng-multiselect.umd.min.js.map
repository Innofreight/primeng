{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/app/components/multiselect/multiselect.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","MULTISELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MultiSelect","multi","MultiSelectItem","this","onClick","EventEmitter","onKeydown","prototype","onOptionClick","event","emit","originalEvent","option","onOptionKeydown","Component","args","selector","template","encapsulation","ViewEncapsulation","None","Input","Output","el","renderer","cd","filterService","config","filter","displaySelectedLabel","maxSelectedLabels","selectedItemsLabel","showToggleAll","emptyFilterMessage","emptyMessage","resetFilterOnHide","dropdownIcon","optionGroupChildren","showHeader","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","filterMatchMode","tooltip","tooltipPosition","tooltipPositionStyle","autofocusFilter","display","onChange","onFilter","onFocus","onBlur","onPanelShow","onPanelHide","scrollHeight","onModelChange","onModelTouched","defineProperty","_defaultLabel","val","updateLabel","_placeholder","_options","_filterValue","activateFilter","ngOnInit","ngAfterContentInit","_this","templates","forEach","item","getType","itemTemplate","groupTemplate","selectedItemsTemplate","headerTemplate","emptyFilterTemplate","emptyTemplate","footerTemplate","ngAfterViewInit","overlayVisible","show","ngAfterViewChecked","filtered","alignOverlay","getOptionLabel","optionLabel","ObjectUtils","resolveFieldData","undefined","label","getOptionValue","optionValue","getOptionGroupLabel","optionGroup","optionGroupLabel","getOptionGroupChildren","items","isOptionDisabled","optionDisabled","disabled","maxSelectionLimitReached","isSelected","writeValue","updateFilledState","checkSelectionLimit","markForCheck","selectionLimit","filled","registerOnChange","fn","registerOnTouched","setDisabledState","selectionIndex","findSelectionIndex","arguments","concat","__spread","itemValue","index","equals","dataKey","optionsToRender","optionsToRender_1","optionsToRender_1_1","toggleAll","toggleAllDisabled","readonly","allChecked","uncheckAll","checkAll","preventDefault","opt","group","subOptions","onOverlayAnimationStart","toState","overlay","element","appendOverlay","style","zIndex","String","DomHandler","zindex","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","filterInputChild","nativeElement","preventModelTouched","focus","onOverlayHide","appendTo","document","body","appendChild","minWidth","getWidth","containerViewChild","restoreOverlayAppend","absolutePosition","relativePosition","hide","unbindDocumentClickListener","_filteredOptions","close","stopPropagation","onMouseclick","input","target","isSameNode","accessibleViewChild","isOverlayClick","hasClass","removeChip","chip","targetNode","contains","isOutsideClicked","onInputFocus","onInputBlur","which","nextItem","findNextItem","parentElement","prevItem","findPrevItem","nextElementSibling","children","isHidden","previousElementSibling","altKey","options","itemLabel","findLabelByValue","valuesAsString","pattern","test","replace","match","placeholder","defaultLabel","searchLabelByValue","selectedDisabledItemsLength","unselectedDisabledItemsLength","selectedEnabledItemsLength","visibleOptionsLength","optionsToRender_2","optionsToRender_2_1","_c","e_3","_d","selected","getTranslation","TranslationKeys","EMPTY_MESSAGE","EMPTY_FILTER_MESSAGE","hasFilter","trim","onFilterInputChange","searchFields","filterBy","split","searchFields_1","filteredGroups","optgroup","filteredSubOptions","filterValue","filterLocale","assign","_b","onHeaderCheckboxFocus","headerCheckboxFocus","onHeaderCheckboxBlur","documentClickListener","documentTarget","ownerDocument","listen","documentResizeListener","onWindowResize","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","isAndroid","scrollHandler","ConnectedOverlayScrollHandler","unbindScrollListener","ngOnDestroy","destroy","animations","trigger","transition","opacity","transform","animate","host","[class.p-inputwrapper-filled]","[class.p-inputwrapper-focus]","providers","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Renderer2","ChangeDetectorRef","FilterService","PrimeNGConfig","ViewChild","ContentChild","Footer","Header","ContentChildren","PrimeTemplate","NgModule","imports","CommonModule","SharedModule","ScrollingModule","TooltipModule","RippleModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { NgModule, Component, ElementRef, OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, Input, Output, Renderer2, EventEmitter,\r\n    forwardRef, ViewChild, ChangeDetectorRef, TemplateRef, ContentChildren, QueryList, ContentChild, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\r\nimport { trigger,style,transition,animate,AnimationEvent} from '@angular/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\r\nimport { ObjectUtils } from 'primeng/utils';\r\nimport { SharedModule, PrimeTemplate, Footer, Header, FilterService, PrimeNGConfig, TranslationKeys } from 'primeng/api';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { RippleModule } from 'primeng/ripple';\r\n\r\nexport const MULTISELECT_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MultiSelect),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-multiSelectItem',\r\n    template: `\r\n        <li class=\"p-multiselect-item\" (click)=\"onOptionClick($event)\" (keydown)=\"onOptionKeydown($event)\" [attr.aria-label]=\"label\" \r\n            [attr.tabindex]=\"disabled ? null : '0'\" [ngStyle]=\"{'height': itemSize + 'px'}\"\r\n            [ngClass]=\"{'p-highlight': selected, 'p-disabled': disabled}\" pRipple>\r\n            <div class=\"p-checkbox p-component\">\r\n                <div class=\"p-checkbox-box\" [ngClass]=\"{'p-highlight': selected}\">\r\n                    <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check': selected}\"></span>\r\n                </div>\r\n            </div>\r\n            <span *ngIf=\"!template\">{{label}}</span>\r\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\r\n        </li>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MultiSelectItem {\r\n\r\n    @Input() option: any;\r\n\r\n    @Input() selected: boolean;\r\n\r\n    @Input() label: any;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() itemSize: number;\r\n\r\n    @Input() template: TemplateRef<any>;\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onKeydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    onOptionClick(event: Event) {\r\n        this.onClick.emit({\r\n            originalEvent: event,\r\n            option: this.option\r\n        });\r\n    }\r\n\r\n    onOptionKeydown(event: Event) {\r\n        this.onKeydown.emit({\r\n            originalEvent: event,\r\n            option: this.option\r\n        });\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-multiSelect',\r\n    template: `\r\n        <div #container [ngClass]=\"{'p-multiselect p-component':true,\r\n            'p-multiselect-open':overlayVisible,\r\n            'p-multiselect-chip': display === 'chip',\r\n            'p-focus':focus,\r\n            'p-disabled': disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\"\r\n            (click)=\"onMouseclick($event,in)\">\r\n            <div class=\"p-hidden-accessible\">\r\n                <input #in type=\"text\" readonly=\"readonly\" [attr.id]=\"inputId\" [attr.name]=\"name\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\"\r\n                       [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\"\r\n                       [attr.aria-labelledby]=\"ariaLabelledBy\" role=\"listbox\">\r\n            </div>\r\n            <div class=\"p-multiselect-label-container\" [pTooltip]=\"tooltip\" [tooltipPosition]=\"tooltipPosition\" [positionStyle]=\"tooltipPositionStyle\" [tooltipStyleClass]=\"tooltipStyleClass\">\r\n                <div class=\"p-multiselect-label\" [ngClass]=\"{'p-placeholder': valuesAsString === (defaultLabel || placeholder), 'p-multiselect-label-empty': ((valuesAsString == null || valuesAsString.length === 0) && (placeholder == null || placeholder.length === 0))}\">\r\n                    <ng-container *ngIf=\"!selectedItemsTemplate\">\r\n                        <ng-container *ngIf=\"display === 'comma'\">{{valuesAsString || 'empty'}}</ng-container>\r\n                        <ng-container *ngIf=\"display === 'chip'\">\r\n                            <div #token *ngFor=\"let item of value; let i = index;\" class=\"p-multiselect-token\">\r\n                                <span class=\"p-multiselect-token-label\">{{findLabelByValue(item)}}</span>\r\n                                <span *ngIf=\"!disabled\" class=\"p-multiselect-token-icon pi pi-times-circle\" (click)=\"removeChip(item, $event)\"></span>\r\n                            </div>\r\n                            <ng-container *ngIf=\"!value || value.length === 0\">{{placeholder || defaultLabel || 'empty'}}</ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <ng-container *ngTemplateOutlet=\"selectedItemsTemplate; context: {$implicit: value}\"></ng-container>\r\n                </div>\r\n            </div>\r\n            <div [ngClass]=\"{'p-multiselect-trigger':true}\">\r\n                <span class=\"p-multiselect-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\r\n            </div>\r\n            <div *ngIf=\"overlayVisible\" [ngClass]=\"['p-multiselect-panel p-component']\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\r\n                [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\" (keydown)=\"onKeydown($event)\">\r\n                <div class=\"p-multiselect-header\" *ngIf=\"showHeader\">\r\n                    <ng-content select=\"p-header\"></ng-content>\r\n                    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n                    <div class=\"p-checkbox p-component\" *ngIf=\"showToggleAll && !selectionLimit\" [ngClass]=\"{'p-checkbox-disabled': disabled || toggleAllDisabled}\">\r\n                        <div class=\"p-hidden-accessible\">\r\n                            <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\" [attr.disabled]=\"disabled || toggleAllDisabled\">\r\n                        </div>\r\n                        <div class=\"p-checkbox-box\" role=\"checkbox\" [attr.aria-checked]=\"allChecked\" [ngClass]=\"{'p-highlight':allChecked, 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled}\" (click)=\"toggleAll($event)\">\r\n                            <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':allChecked}\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"p-multiselect-filter-container\" *ngIf=\"filter\">\r\n                        <input #filterInput type=\"text\" role=\"textbox\" [value]=\"filterValue||''\" (input)=\"onFilterInputChange($event)\" class=\"p-multiselect-filter p-inputtext p-component\" [disabled]=\"disabled\" [attr.placeholder]=\"filterPlaceHolder\" [attr.aria-label]=\"ariaFilterLabel\">\r\n                        <span class=\"p-multiselect-filter-icon pi pi-search\"></span>\r\n                    </div>\r\n                    <button class=\"p-multiselect-close p-link\" type=\"button\" (click)=\"close($event)\" pRipple>\r\n                        <span class=\"p-multiselect-close-icon pi pi-times\"></span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-multiselect-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\r\n                    <ul class=\"p-multiselect-items p-component\" [ngClass]=\"{'p-multiselect-virtualscroll': virtualScroll}\" role=\"listbox\" aria-multiselectable=\"true\">\r\n                        <ng-container *ngIf=\"group\">\r\n                            <ng-template ngFor let-optgroup [ngForOf]=\"optionsToRender\">\r\n                                <li class=\"p-multiselect-item-group\">\r\n                                    <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\r\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\r\n                                </li>\r\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\r\n                            </ng-template>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!group\">\r\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToRender}\"></ng-container>\r\n                        </ng-container>\r\n                        <ng-template #itemslist let-optionsToDisplay let-selectedOption=\"selectedOption\">\r\n                            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\r\n                                <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"optionsToDisplay\">\r\n                                    <p-multiSelectItem [option]=\"option\" [selected]=\"isSelected(option)\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\" (onClick)=\"onOptionClick($event)\" (onKeydown)=\"onOptionKeydown($event)\"\r\n                                            [template]=\"itemTemplate\"></p-multiSelectItem>\r\n                                </ng-template>\r\n                            </ng-container>\r\n                            <ng-template #virtualScrollList>\r\n                                <cdk-virtual-scroll-viewport #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && !emptyOptions\">\r\n                                    <ng-container *cdkVirtualFor=\"let option of optionsToDisplay; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\r\n                                        <p-multiSelectItem [option]=\"option\" [selected]=\"isSelected(option)\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\" (onClick)=\"onOptionClick($event)\" (onKeydown)=\"onOptionKeydown($event)\"\r\n                                            [template]=\"itemTemplate\" [itemSize]=\"itemSize\"></p-multiSelectItem>\r\n                                    </ng-container>\r\n                                </cdk-virtual-scroll-viewport>\r\n                            </ng-template>\r\n                            <li *ngIf=\"hasFilter() && emptyOptions\" class=\"p-multiselect-empty-message\">\r\n                                <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\r\n                                    {{emptyFilterMessageLabel}}\r\n                                </ng-container>\r\n                                <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\r\n                            </li>\r\n                            <li *ngIf=\"!hasFilter() && emptyOptions\" class=\"p-multiselect-empty-message\">\r\n                                <ng-container *ngIf=\"!emptyTemplate; else empty\">\r\n                                    {{emptyMessageLabel}}\r\n                                </ng-container>\r\n                                <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\r\n                            </li>\r\n                        </ng-template>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"p-multiselect-footer\" *ngIf=\"footerFacet || footerTemplate\">\r\n                    <ng-content select=\"p-footer\"></ng-content>\r\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('overlayAnimation', [\r\n            transition(':enter', [\r\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\r\n                animate('{{showTransitionParams}}')\r\n              ]),\r\n              transition(':leave', [\r\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\r\n              ])\r\n        ])\r\n    ],\r\n    host: {\r\n        '[class.p-inputwrapper-filled]': 'filled',\r\n        '[class.p-inputwrapper-focus]': 'focus || overlayVisible'\r\n    },\r\n    providers: [MULTISELECT_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./multiselect.css']\r\n})\r\nexport class MultiSelect implements OnInit,AfterViewInit,AfterContentInit,AfterViewChecked,OnDestroy,ControlValueAccessor {\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() panelStyle: any;\r\n\r\n    @Input() panelStyleClass: string;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() readonly: boolean;\r\n\r\n    @Input() group: boolean;\r\n\r\n    @Input() filter: boolean = true;\r\n\r\n    @Input() filterPlaceHolder: string;\r\n\r\n    @Input() filterLocale: string;\r\n\r\n    @Input() overlayVisible: boolean;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() appendTo: any;\r\n\r\n    @Input() dataKey: string;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n\r\n    @Input() displaySelectedLabel: boolean = true;\r\n\r\n    @Input() maxSelectedLabels: number = 3;\r\n\r\n    @Input() selectionLimit: number;\r\n\r\n    @Input() selectedItemsLabel: string = 'ellipsis';\r\n\r\n    @Input() showToggleAll: boolean = true;\r\n\r\n    @Input() emptyFilterMessage: string = '';\r\n\r\n    @Input() emptyMessage: string = '';\r\n\r\n    @Input() resetFilterOnHide: boolean = false;\r\n\r\n    @Input() dropdownIcon: string = 'pi pi-chevron-down';\r\n\r\n    @Input() optionLabel: string;\r\n\r\n    @Input() optionValue: string;\r\n\r\n    @Input() optionDisabled: string;\r\n\r\n    @Input() optionGroupLabel: string;\r\n\r\n    @Input() optionGroupChildren: string = \"items\";\r\n\r\n    @Input() showHeader: boolean = true;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @Input() filterBy: string;\r\n\r\n    @Input() virtualScroll: boolean;\r\n\r\n    @Input() itemSize: number;\r\n\r\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n\r\n    @Input() hideTransitionOptions: string = '.1s linear';\r\n\r\n    @Input() ariaFilterLabel: string;\r\n\r\n    @Input() filterMatchMode: string = \"contains\";\r\n\r\n    @Input() tooltip: string = '';\r\n\r\n    @Input() tooltipPosition: string = 'right';\r\n\r\n    @Input() tooltipPositionStyle: string = 'absolute';\r\n\r\n    @Input() tooltipStyleClass: string;\r\n\r\n    @Input() autofocusFilter: boolean = true;\r\n\r\n    @Input() display: string = 'comma';\r\n\r\n    @ViewChild('container') containerViewChild: ElementRef;\r\n\r\n    @ViewChild('filterInput') filterInputChild: ElementRef;\r\n\r\n    @ViewChild('in') accessibleViewChild: ElementRef;\r\n\r\n    @ContentChild(Footer) footerFacet;\r\n\r\n    @ContentChild(Header) headerFacet;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onPanelShow: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onPanelHide: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() scrollHeight: string = '200px';\r\n\r\n    _defaultLabel: string;\r\n\r\n    @Input() set defaultLabel(val: string) {\r\n        this._defaultLabel = val;\r\n        this.updateLabel();\r\n    }\r\n\r\n    get defaultLabel(): string {\r\n        return this._defaultLabel;\r\n    }\r\n\r\n    _placeholder: string;\r\n\r\n    @Input() set placeholder(val: string) {\r\n        this._placeholder = val;\r\n        this.updateLabel();\r\n    }\r\n\r\n    get placeholder(): string {\r\n        return this._placeholder;\r\n    }\r\n\r\n    @Input() get options(): any[] {\r\n        return this._options;\r\n    }\r\n\r\n    set options(val: any[]) {\r\n        this._options = val;\r\n        this.updateLabel();\r\n    }\r\n\r\n    @Input() get filterValue(): string {\r\n        return this._filterValue;\r\n    }\r\n\r\n    set filterValue(val: string) {\r\n        this._filterValue = val;\r\n        this.activateFilter();\r\n    }\r\n\r\n    public value: any[];\r\n\r\n    public _filteredOptions: any[];\r\n\r\n    public onModelChange: Function = () => {};\r\n\r\n    public onModelTouched: Function = () => {};\r\n\r\n    overlay: HTMLDivElement;\r\n\r\n    public valuesAsString: string;\r\n\r\n    public focus: boolean;\r\n\r\n    filled: boolean;\r\n\r\n    public documentClickListener: any;\r\n\r\n    public _filterValue: string;\r\n\r\n    public filtered: boolean;\r\n\r\n    public itemTemplate: TemplateRef<any>;\r\n\r\n    public groupTemplate: TemplateRef<any>;\r\n\r\n    public headerTemplate: TemplateRef<any>;\r\n\r\n    public footerTemplate: TemplateRef<any>;\r\n\r\n    public emptyFilterTemplate: TemplateRef<any>;\r\n\r\n    public emptyTemplate: TemplateRef<any>;\r\n\r\n    public selectedItemsTemplate: TemplateRef<any>;\r\n\r\n    public headerCheckboxFocus: boolean;\r\n\r\n    _options: any[];\r\n\r\n    maxSelectionLimitReached: boolean;\r\n\r\n    scrollHandler: any;\r\n\r\n    documentResizeListener: any;\r\n\r\n    preventModelTouched: boolean;\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, public filterService: FilterService, public config: PrimeNGConfig) {}\r\n\r\n    ngOnInit() {\r\n        this.updateLabel();\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'item':\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n\r\n                case 'group':\r\n                    this.groupTemplate = item.template;\r\n                break;\r\n\r\n                case 'selectedItems':\r\n                    this.selectedItemsTemplate = item.template;\r\n                break;\r\n\r\n                case 'header':\r\n                    this.headerTemplate = item.template;\r\n                break;\r\n\r\n                case 'emptyfilter':\r\n                    this.emptyFilterTemplate = item.template;\r\n                break;\r\n\r\n                case 'empty':\r\n                    this.emptyTemplate = item.template;\r\n                break;\r\n\r\n                case 'footer':\r\n                    this.footerTemplate = item.template;\r\n                break;\r\n\r\n                default:\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.overlayVisible) {\r\n            this.show();\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        if (this.filtered) {\r\n            this.alignOverlay();\r\n\r\n            this.filtered = false;\r\n        }\r\n    }\r\n\r\n    getOptionLabel(option: any) {\r\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : (option.label != undefined ? option.label : option);\r\n    }\r\n\r\n    getOptionValue(option: any) {\r\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : (this.optionLabel || option.value === undefined ? option : option.value);\r\n    }\r\n\r\n    getOptionGroupLabel(optionGroup: any) {\r\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\r\n    }\r\n\r\n    getOptionGroupChildren(optionGroup: any) {\r\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\r\n    }\r\n\r\n    isOptionDisabled(option: any) {\r\n        let disabled = this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : (option.disabled !== undefined ? option.disabled : false);\r\n        return (disabled || (this.maxSelectionLimitReached && !this.isSelected(option)));\r\n    }\r\n\r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.updateLabel();\r\n        this.updateFilledState();\r\n        this.checkSelectionLimit();\r\n\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    checkSelectionLimit() {\r\n        if (this.selectionLimit && (this.value && this.value.length === this.selectionLimit)) {\r\n            this.maxSelectionLimitReached = true;\r\n        }\r\n        else {\r\n            this.maxSelectionLimitReached = false;\r\n        }\r\n    }\r\n\r\n    updateFilledState() {\r\n        this.filled = (this.value && this.value.length > 0);\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    onOptionClick(event) {\r\n        let option = event.option;\r\n        if (this.isOptionDisabled(option)) {\r\n            return;\r\n        }\r\n\r\n        let optionValue = this.getOptionValue(option);\r\n        let selectionIndex = this.findSelectionIndex(optionValue);\r\n        if (selectionIndex != -1) {\r\n            this.value = this.value.filter((val,i) => i != selectionIndex);\r\n\r\n            if (this.selectionLimit) {\r\n                this.maxSelectionLimitReached = false;\r\n            }\r\n        }\r\n        else {\r\n            if (!this.selectionLimit || (!this.value || this.value.length < this.selectionLimit)) {\r\n                this.value = [...this.value || [], optionValue];\r\n            }\r\n\r\n            this.checkSelectionLimit();\r\n        }\r\n\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({originalEvent: event.originalEvent, value: this.value, itemValue: optionValue});\r\n        this.updateLabel();\r\n        this.updateFilledState();\r\n    }\r\n\r\n    isSelected(option) {\r\n        return this.findSelectionIndex(this.getOptionValue(option)) != -1;\r\n    }\r\n\r\n    findSelectionIndex(val: any): number {\r\n        let index = -1;\r\n\r\n        if (this.value) {\r\n            for (let i = 0; i < this.value.length; i++) {\r\n                if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    get toggleAllDisabled(): boolean {\r\n        let optionsToRender = this.optionsToRender;\r\n        if (!optionsToRender || optionsToRender.length === 0) {\r\n            return true;\r\n        }\r\n        else {\r\n            for (let option of optionsToRender) {\r\n                if (!this.isOptionDisabled(option))\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    toggleAll(event) {\r\n        if (this.disabled || this.toggleAllDisabled || this.readonly) {\r\n            return;\r\n        }\r\n        \r\n        let allChecked = this.allChecked;     \r\n\r\n        if (allChecked)\r\n            this.uncheckAll();\r\n        else\r\n            this.checkAll();\r\n\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({ originalEvent: event, value: this.value });        \r\n        this.updateFilledState();\r\n        this.updateLabel();\r\n        event.preventDefault();\r\n    }\r\n\r\n    checkAll() {\r\n        let optionsToRender = this.optionsToRender;\r\n        let val: any[] = [];\r\n\r\n        optionsToRender.forEach(opt => {\r\n            if (!this.group) {\r\n                let optionDisabled = this.isOptionDisabled(opt); \r\n                if (!optionDisabled || (optionDisabled && this.isSelected(opt))) {\r\n                    val.push(this.getOptionValue(opt));\r\n                }\r\n            }\r\n            else {\r\n                let subOptions = this.getOptionGroupChildren(opt);\r\n\r\n                if (subOptions) {\r\n                    subOptions.forEach(option => {\r\n                        let optionDisabled = this.isOptionDisabled(option); \r\n                        if (!optionDisabled || (optionDisabled && this.isSelected(option))) {\r\n                            val.push(this.getOptionValue(option));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        this.value = val;\r\n    }\r\n\r\n    uncheckAll() {\r\n        let optionsToRender = this.optionsToRender;\r\n        let val: any[] = [];\r\n\r\n        optionsToRender.forEach(opt => {\r\n            if (!this.group) {\r\n                let optionDisabled = this.isOptionDisabled(opt); \r\n                if (optionDisabled && this.isSelected(opt)) {\r\n                    val.push(this.getOptionValue(opt));\r\n                }\r\n            }\r\n            else {\r\n                if (opt.items) {\r\n                    opt.items.forEach(option => {\r\n                        let optionDisabled = this.isOptionDisabled(option); \r\n                        if (optionDisabled && this.isSelected(option)) {\r\n                            val.push(this.getOptionValue(option));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        this.value = val;\r\n    }\r\n\r\n    show() {\r\n        if (!this.overlayVisible){\r\n            this.overlayVisible = true;\r\n        }\r\n    }\r\n\r\n    onOverlayAnimationStart(event: AnimationEvent) {\r\n        switch (event.toState) {\r\n            case 'visible':\r\n                this.overlay = event.element;\r\n                this.appendOverlay();\r\n                if (this.autoZIndex) {\r\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n                }\r\n                this.alignOverlay();\r\n                this.bindDocumentClickListener();\r\n                this.bindDocumentResizeListener();\r\n                this.bindScrollListener();\r\n\r\n                if (this.filterInputChild && this.filterInputChild.nativeElement) {\r\n                    this.preventModelTouched = true;\r\n\r\n                    if (this.autofocusFilter) {\r\n                        this.filterInputChild.nativeElement.focus();\r\n                    }\r\n                }\r\n\r\n                this.onPanelShow.emit();\r\n            break;\r\n\r\n            case 'void':\r\n                this.onOverlayHide();\r\n            break;\r\n        }\r\n    }\r\n\r\n    appendOverlay() {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.overlay);\r\n            else\r\n                DomHandler.appendChild(this.overlay, this.appendTo);\r\n\r\n            if (!this.overlay.style.minWidth) {\r\n                this.overlay.style.minWidth = DomHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\r\n            }\r\n        }\r\n    }\r\n\r\n    restoreOverlayAppend() {\r\n        if (this.overlay && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.overlay);\r\n        }\r\n    }\r\n\r\n    alignOverlay() {\r\n        if (this.overlay) {\r\n            if (this.appendTo)\r\n                DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);\r\n            else\r\n                DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.overlayVisible = false;\r\n        this.unbindDocumentClickListener();\r\n        if (this.resetFilterOnHide){\r\n            this.filterInputChild.nativeElement.value = '';\r\n            this._filterValue = null;\r\n            this._filteredOptions = null;\r\n        }\r\n        this.onPanelHide.emit();\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    close(event) {\r\n        this.hide();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onMouseclick(event: MouseEvent, input) {\r\n        if (this.disabled || this.readonly || (<Node> event.target).isSameNode(this.accessibleViewChild.nativeElement)) {\r\n            return;\r\n        }\r\n\r\n        this.onClick.emit(event);\r\n\r\n        if (!this.isOverlayClick(event) && !DomHandler.hasClass(event.target, 'p-multiselect-token-icon')) {\r\n            if (this.overlayVisible) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                input.focus();\r\n                this.show();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeChip(chip: any, event: MouseEvent) {\r\n        this.value = this.value.filter(val => !ObjectUtils.equals(val, chip, this.dataKey));\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({ originalEvent: event, value: this.value });\r\n        this.updateLabel();\r\n        this.updateFilledState();\r\n    }\r\n\r\n    isOverlayClick(event: MouseEvent) {\r\n        let targetNode = <Node> event.target;\r\n        return this.overlay ? (this.overlay.isSameNode(targetNode) || this.overlay.contains(targetNode)) : false;\r\n    }\r\n\r\n    isOutsideClicked(event: MouseEvent): boolean {\r\n        return !(this.el.nativeElement.isSameNode(event.target) || this.el.nativeElement.contains(event.target) || this.isOverlayClick(event));\r\n    }\r\n\r\n    onInputFocus(event) {\r\n        this.focus = true;\r\n        this.onFocus.emit({originalEvent: event});\r\n    }\r\n\r\n    onInputBlur(event) {\r\n        this.focus = false;\r\n        this.onBlur.emit({originalEvent: event});\r\n\r\n        if (!this.preventModelTouched) {\r\n            this.onModelTouched();\r\n        }\r\n        this.preventModelTouched = false;\r\n    }\r\n\r\n    onOptionKeydown(event) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n\r\n        switch(event.originalEvent.which) {\r\n\r\n            //down\r\n            case 40:\r\n                var nextItem = this.findNextItem(event.originalEvent.target.parentElement);\r\n                if (nextItem) {\r\n                    nextItem.focus();\r\n                }\r\n\r\n                event.originalEvent.preventDefault();\r\n            break;\r\n\r\n            //up\r\n            case 38:\r\n                var prevItem = this.findPrevItem(event.originalEvent.target.parentElement);\r\n                if (prevItem) {\r\n                    prevItem.focus();\r\n                }\r\n\r\n                event.originalEvent.preventDefault();\r\n            break;\r\n\r\n            //enter\r\n            case 13:\r\n                this.onOptionClick(event);\r\n                event.originalEvent.preventDefault();\r\n            break;\r\n        }\r\n    }\r\n\r\n    findNextItem(item) {\r\n        let nextItem = item.nextElementSibling;\r\n\r\n        if (nextItem)\r\n            return DomHandler.hasClass(nextItem.children[0], 'p-disabled') || DomHandler.isHidden(nextItem.children[0]) || DomHandler.hasClass(nextItem, 'p-multiselect-item-group') ? this.findNextItem(nextItem) : nextItem.children[0];\r\n        else\r\n            return null;\r\n    }\r\n\r\n    findPrevItem(item) {\r\n        let prevItem = item.previousElementSibling;\r\n\r\n        if (prevItem)\r\n            return DomHandler.hasClass(prevItem.children[0], 'p-disabled') || DomHandler.isHidden(prevItem.children[0]) || DomHandler.hasClass(prevItem, 'p-multiselect-item-group') ? this.findPrevItem(prevItem) : prevItem.children[0];\r\n        else\r\n            return null;\r\n    }\r\n\r\n    onKeydown(event: KeyboardEvent){\r\n        switch(event.which) {\r\n            //down\r\n            case 40:\r\n                if (!this.overlayVisible && event.altKey) {\r\n                    this.show();\r\n                    event.preventDefault();\r\n                }\r\n            break;\r\n\r\n            //space\r\n            case 32:\r\n                if (!this.overlayVisible){\r\n                    this.show();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n\r\n            //escape\r\n            case 27:\r\n                this.hide();\r\n            break;\r\n        }\r\n    }\r\n\r\n    updateLabel() {\r\n        if (this.value && this.options && this.value.length && this.displaySelectedLabel) {\r\n            let label = '';\r\n            for (let i = 0; i < this.value.length; i++) {\r\n                let itemLabel = this.findLabelByValue(this.value[i]);\r\n                if (itemLabel) {\r\n                    if (label.length > 0) {\r\n                        label = label + ', ';\r\n                    }\r\n                    label = label + itemLabel;\r\n                }\r\n            }\r\n\r\n            if (this.value.length <= this.maxSelectedLabels || this.selectedItemsLabel === 'ellipsis') {\r\n                this.valuesAsString = label;\r\n            }\r\n            else {\r\n                let pattern = /{(.*?)}/;\r\n                if (pattern.test(this.selectedItemsLabel)) {\r\n                    this.valuesAsString = this.selectedItemsLabel.replace(this.selectedItemsLabel.match(pattern)[0], this.value.length + '');\r\n                } else {\r\n                    this.valuesAsString = this.selectedItemsLabel;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.valuesAsString = this.placeholder || this.defaultLabel;\r\n        }\r\n    }\r\n\r\n    findLabelByValue(val: any): string {\r\n        if (this.group) {\r\n            let label = null;\r\n\r\n            for (let i = 0; i < this.options.length; i++) {\r\n                let subOptions = this.getOptionGroupChildren(this.options[i]);\r\n                if (subOptions) {\r\n                    label = this.searchLabelByValue(val, subOptions);\r\n\r\n                    if (label) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return label;\r\n        }\r\n        else {\r\n            return this.searchLabelByValue(val, this.options)\r\n        }\r\n    }\r\n\r\n    searchLabelByValue(val: any, options: any[]): string {\r\n        let label = null;\r\n\r\n        for (let i = 0; i < options.length; i++) {\r\n            let option = options[i];\r\n            let optionValue = this.getOptionValue(option);\r\n\r\n            if (val == null && optionValue == null || ObjectUtils.equals(val, optionValue, this.dataKey)) {\r\n                label = this.getOptionLabel(option);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return label;\r\n    }\r\n\r\n    get allChecked(): boolean {\r\n        let optionsToRender = this.optionsToRender;\r\n        if (!optionsToRender || optionsToRender.length === 0) {\r\n            return false;\r\n        }\r\n        else {\r\n            let selectedDisabledItemsLength = 0;\r\n            let unselectedDisabledItemsLength = 0;\r\n            let selectedEnabledItemsLength = 0;\r\n            let visibleOptionsLength = this.group ? 0 : this.optionsToRender.length;\r\n            \r\n            for (let option of optionsToRender) {\r\n                if (!this.group) {\r\n                    let disabled = this.isOptionDisabled(option);\r\n                    let selected = this.isSelected(option);\r\n    \r\n                    if (disabled) {\r\n                        if (selected)\r\n                            selectedDisabledItemsLength++;\r\n                        else \r\n                            unselectedDisabledItemsLength++;\r\n                    }\r\n                    else {\r\n                        if (selected)\r\n                            selectedEnabledItemsLength++;\r\n                        else\r\n                            return false;\r\n                    }\r\n                }\r\n                else {\r\n                    for (let opt of this.getOptionGroupChildren(option)) {\r\n                        let disabled = this.isOptionDisabled(opt);\r\n                        let selected = this.isSelected(opt);\r\n        \r\n                        if (disabled) {\r\n                            if (selected)\r\n                                selectedDisabledItemsLength++;\r\n                            else \r\n                                unselectedDisabledItemsLength++;\r\n                        }\r\n                        else {\r\n                            if (selected)\r\n                                selectedEnabledItemsLength++;\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n\r\n                        visibleOptionsLength++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return (visibleOptionsLength === selectedDisabledItemsLength \r\n                    || visibleOptionsLength === selectedEnabledItemsLength \r\n                    || selectedEnabledItemsLength && visibleOptionsLength === (selectedEnabledItemsLength + unselectedDisabledItemsLength + selectedDisabledItemsLength));\r\n        }\r\n    }\r\n\r\n    get optionsToRender(): any[] {\r\n        return this._filteredOptions || this.options;\r\n    }\r\n\r\n    get emptyOptions(): boolean {\r\n        let optionsToRender = this.optionsToRender;\r\n        return !optionsToRender || optionsToRender.length === 0;\r\n    }\r\n\r\n    get emptyMessageLabel(): string {\r\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\r\n    }\r\n\r\n    get emptyFilterMessageLabel(): string {\r\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\r\n    }\r\n\r\n    hasFilter() {\r\n        return this._filterValue && this._filterValue.trim().length > 0; \r\n    }\r\n\r\n    onFilterInputChange(event: KeyboardEvent) {\r\n        this._filterValue = (<HTMLInputElement> event.target).value;\r\n        this.activateFilter();\r\n        this.onFilter.emit({originalEvent: event, filter: this._filterValue});\r\n    }\r\n\r\n    activateFilter() {\r\n        if (this.hasFilter() && this._options) {\r\n            let searchFields: string[] = (this.filterBy || this.optionLabel || 'label').split(',');\r\n            if (this.group) {\r\n                let searchFields: string[] = (this.optionLabel || 'label').split(',');\r\n\r\n                let filteredGroups = [];\r\n                for (let optgroup of this.options) {\r\n                    let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\r\n                    if (filteredSubOptions && filteredSubOptions.length) {\r\n                        filteredGroups.push({...optgroup, ...{[this.optionGroupChildren]: filteredSubOptions}});\r\n                    }\r\n                }\r\n\r\n                this._filteredOptions = filteredGroups;\r\n            }\r\n            else {\r\n                this._filteredOptions = this.filterService.filter(this.options, searchFields, this._filterValue, this.filterMatchMode, this.filterLocale);        \r\n            }\r\n        }\r\n        else {\r\n            this._filteredOptions = null;\r\n        }\r\n    }\r\n\r\n    onHeaderCheckboxFocus() {\r\n        this.headerCheckboxFocus = true;\r\n    }\r\n\r\n    onHeaderCheckboxBlur() {\r\n        this.headerCheckboxFocus = false;\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\r\n\r\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\r\n                if (this.isOutsideClicked(event)) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentResizeListener() {\r\n        this.documentResizeListener = this.onWindowResize.bind(this);\r\n        window.addEventListener('resize', this.documentResizeListener);\r\n    }\r\n\r\n    unbindDocumentResizeListener() {\r\n        if (this.documentResizeListener) {\r\n            window.removeEventListener('resize', this.documentResizeListener);\r\n            this.documentResizeListener = null;\r\n        }\r\n    }\r\n\r\n    onWindowResize() {\r\n        if (!DomHandler.isAndroid()) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\r\n                if (this.overlayVisible) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    onOverlayHide() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindDocumentResizeListener();\r\n        this.unbindScrollListener();\r\n        this.overlay = null;\r\n        this.onModelTouched();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n\r\n        this.restoreOverlayAppend();\r\n        this.onOverlayHide();\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,SharedModule,ScrollingModule,TooltipModule,RippleModule],\r\n    exports: [MultiSelect,SharedModule,ScrollingModule],\r\n    declarations: [MultiSelect,MultiSelectItem]\r\n})\r\nexport class MultiSelectModule { }\r\n"]}