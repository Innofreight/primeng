{"version":3,"sources":["../../src/app/components/badge/badge.ts"],"names":["BadgeDirective","el","this","iconPos","prototype","ngAfterViewInit","id","UniqueComponentId","nativeElement","nodeName","indexOf","firstChild","badge","document","createElement","className","severity","DomHandler","addClass","value","appendChild","createTextNode","String","length","initialized","Object","defineProperty","_value","val","getElementById","hasClass","removeClass","innerHTML","ngOnDestroy","Directive","args","selector","ElementRef","Input","Badge","containerClass","p-badge p-component","p-badge-no-gutter","p-badge-lg","size","p-badge-xl","p-badge-info","p-badge-success","p-badge-warning","p-badge-danger","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","NgModule","imports","CommonModule","exports","SharedModule","declarations"],"mappings":"qkBAmBI,SAAAA,EAAmBC,GAAAC,KAAAD,GAAAA,EARVC,KAAAC,QAA+C,cAUxDH,EAAAI,UAAAC,gBAAA,WACIH,KAAKI,GAAKC,EAAAA,oBAAsB,SAChC,IAAIN,GAAqD,GAAhDC,KAAKD,GAAGO,cAAcC,SAASC,QAAQ,KAAaR,KAAKD,GAAGO,cAAcG,WAAaT,KAAKD,GAAGO,cAEpGI,EAAQC,SAASC,cAAc,QACnCF,EAAMN,GAAKJ,KAAKI,GAChBM,EAAMG,UAAY,sBAEdb,KAAKc,UACLC,EAAAA,WAAWC,SAASN,EAAO,WAAaV,KAAKc,UAG/B,MAAdd,KAAKiB,OACLP,EAAMQ,YAAYP,SAASQ,eAAenB,KAAKiB,QAEb,IAA9BG,OAAOpB,KAAKiB,OAAOI,QACnBN,EAAAA,WAAWC,SAASN,EAAO,sBAI/BK,EAAAA,WAAWC,SAASN,EAAO,eAG/BK,EAAAA,WAAWC,SAASjB,EAAI,mBACxBA,EAAGmB,YAAYR,GAEfV,KAAKsB,aAAc,GAGvBC,OAAAC,eAAa1B,EAAAI,UAAA,QAAK,KAAlB,WACI,OAAOF,KAAKyB,YAGhB,SAAUC,GACN,GAAIA,IAAQ1B,KAAKyB,SACbzB,KAAKyB,OAASC,EAEV1B,KAAKsB,aAAa,CAClB,IAAIZ,EAAQC,SAASgB,eAAe3B,KAAKI,IAErCJ,KAAKyB,QACDV,EAAAA,WAAWa,SAASlB,EAAO,gBAC3BK,EAAAA,WAAWc,YAAYnB,EAAO,eAEC,IAA/BU,OAAOpB,KAAKyB,QAAQJ,OACpBN,EAAAA,WAAWC,SAASN,EAAO,qBAG3BK,EAAAA,WAAWc,YAAYnB,EAAO,sBAG5BV,KAAKyB,QAAWV,EAAAA,WAAWa,SAASlB,EAAO,gBACjDK,EAAAA,WAAWC,SAASN,EAAO,eAG/BA,EAAMoB,UAAY,GAClBpB,EAAMQ,YAAYP,SAASQ,eAAenB,KAAKyB,2CAO3D3B,EAAAI,UAAA6B,YAAA,WACI/B,KAAKsB,aAAc,4BA/E1BU,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,wDAPiJC,EAAAA,+CAW1JC,EAAAA,qBAuCAA,EAAAA,wBAgCAA,EAAAA,0BAkBL,SAAAC,YAYIA,EAAAnC,UAAAoC,eAAA,WACI,MAAO,CACHC,uBAAuB,EACvBC,oBAAqBxC,KAAKiB,OAAuC,IAA9BG,OAAOpB,KAAKiB,OAAOI,OACtDoB,aAA4B,UAAdzC,KAAK0C,KACnBC,aAA4B,WAAd3C,KAAK0C,KACnBE,eAAkC,SAAlB5C,KAAKc,SACrB+B,kBAAqC,YAAlB7C,KAAKc,SACxBgC,kBAAqC,YAAlB9C,KAAKc,SACxBiC,iBAAoC,WAAlB/C,KAAKc,oCAhClCkC,EAAAA,UAASf,KAAA,CAAC,CACPC,SAAU,UACVe,SAAU,yIAKVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,0ZAKhCnB,EAAAA,qBAEAA,EAAAA,oBAEAA,EAAAA,wBAEAA,EAAAA,qBAEAA,EAAAA,eAqBL,iCALCoB,EAAAA,SAAQvB,KAAA,CAAC,CACNwB,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACtB,EAAOvC,EAAgB8D,EAAAA,cACjCC,aAAc,CAACxB,EAAOvC","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, QueryList, ContentChildren, TemplateRef, Directive, OnDestroy, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'primeng/api';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { UniqueComponentId } from 'primeng/utils';\r\n\r\n@Directive({\r\n    selector: '[pBadge]'\r\n})\r\nexport class BadgeDirective implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\r\n            \r\n    public _value: string;\r\n            \r\n    public initialized: boolean;\r\n\r\n    private id: string;\r\n    \r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngAfterViewInit() {\r\n        this.id = UniqueComponentId() + '_badge';\r\n        let el = this.el.nativeElement.nodeName.indexOf(\"-\") != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement; \r\n\r\n        let badge = document.createElement('span');\r\n        badge.id = this.id ;\r\n        badge.className = 'p-badge p-component';\r\n\r\n        if (this.severity) {\r\n            DomHandler.addClass(badge, 'p-badge-' + this.severity);\r\n        }\r\n        \r\n        if (this.value != null) {\r\n            badge.appendChild(document.createTextNode(this.value));\r\n            \r\n            if (String(this.value).length === 1) {\r\n                DomHandler.addClass(badge, 'p-badge-no-gutter');\r\n            }\r\n        }\r\n        else {\r\n            DomHandler.addClass(badge, 'p-badge-dot');\r\n        }\r\n\r\n        DomHandler.addClass(el, 'p-overlay-badge');\r\n        el.appendChild(badge);\r\n\r\n        this.initialized = true;\r\n    }\r\n\r\n    @Input() get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    set value(val: string) {\r\n        if (val !== this._value) {\r\n            this._value = val;\r\n\r\n            if (this.initialized) {\r\n                let badge = document.getElementById(this.id);\r\n\r\n                if (this._value) {\r\n                    if (DomHandler.hasClass(badge, 'p-badge-dot'))\r\n                        DomHandler.removeClass(badge, 'p-badge-dot');\r\n\r\n                    if (String(this._value).length === 1) {\r\n                        DomHandler.addClass(badge, 'p-badge-no-gutter');\r\n                    }\r\n                    else {\r\n                        DomHandler.removeClass(badge, 'p-badge-no-gutter');\r\n                    }\r\n                }\r\n                else if (!this._value && !DomHandler.hasClass(badge, 'p-badge-dot')) {\r\n                    DomHandler.addClass(badge, 'p-badge-dot');\r\n                }\r\n\r\n                badge.innerHTML = '';\r\n                badge.appendChild(document.createTextNode(this._value));\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input() severity: string;\r\n        \r\n    ngOnDestroy() {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-badge',\r\n    template: `\r\n        <span [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\r\n                {{value}}\r\n        </span>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./badge.css']\r\n})\r\nexport class Badge {\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() size: string;\r\n    \r\n    @Input() severity: string;\r\n    \r\n    @Input() value: string;\r\n    \r\n    containerClass() {\r\n        return {\r\n            'p-badge p-component': true,\r\n            'p-badge-no-gutter': this.value && String(this.value).length === 1,\r\n            'p-badge-lg': this.size === 'large',\r\n            'p-badge-xl': this.size === 'xlarge',\r\n            'p-badge-info': this.severity === 'info',\r\n            'p-badge-success': this.severity === 'success',\r\n            'p-badge-warning': this.severity === 'warning',\r\n            'p-badge-danger': this.severity === 'danger'\r\n        };\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Badge, BadgeDirective, SharedModule],\r\n    declarations: [Badge, BadgeDirective]\r\n})\r\nexport class BadgeModule { }\r\n"]}