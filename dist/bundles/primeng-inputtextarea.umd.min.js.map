{"version":3,"sources":["../../src/app/components/inputtextarea/inputtextarea.ts"],"names":["InputTextarea","el","ngModel","control","cd","this","onResize","EventEmitter","prototype","ngOnInit","_this","ngModelSubscription","valueChanges","subscribe","updateState","ngControlSubscription","ngAfterViewInit","autoResize","resize","updateFilledState","detectChanges","onInput","e","filled","nativeElement","value","length","onFocus","onBlur","event","style","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","emit","ngOnDestroy","unsubscribe","Directive","args","selector","host","[class.p-inputtextarea]","[class.p-inputtext]","[class.p-component]","[class.p-filled]","[class.p-inputtextarea-resizable]","ElementRef","NgModel","decorators","type","Optional","NgControl","ChangeDetectorRef","Input","Output","HostListener","NgModule","imports","CommonModule","exports","declarations"],"mappings":"weA6BI,SAAAA,EAAmBC,EAAmCC,EAAqCC,EAA6BC,GAArGC,KAAAJ,GAAAA,EAAmCI,KAAAH,QAAAA,EAAqCG,KAAAF,QAAAA,EAA6BE,KAAAD,GAAAA,EAV9GC,KAAAC,SAA8B,IAAIC,EAAAA,oBAY5CP,EAAAQ,UAAAC,SAAA,WAAA,IAAAC,EAAAL,KACQA,KAAKH,UACLG,KAAKM,oBAAsBN,KAAKH,QAAQU,aAAaC,WAAU,WAC3DH,EAAKI,kBAITT,KAAKF,UACLE,KAAKU,sBAAwBV,KAAKF,QAAQS,aAAaC,WAAU,WAC7DH,EAAKI,mBAKjBd,EAAAQ,UAAAQ,gBAAA,WACQX,KAAKY,YACLZ,KAAKa,SAETb,KAAKc,oBACLd,KAAKD,GAAGgB,iBAIZpB,EAAAQ,UAAAa,QAAA,SAAQC,GACJjB,KAAKS,eAGTd,EAAAQ,UAAAW,kBAAA,WACId,KAAKkB,OAASlB,KAAKJ,GAAGuB,cAAcC,OAASpB,KAAKJ,GAAGuB,cAAcC,MAAMC,QAI7E1B,EAAAQ,UAAAmB,QAAA,SAAQL,GACAjB,KAAKY,YACLZ,KAAKa,OAAOI,IAKpBtB,EAAAQ,UAAAoB,OAAA,SAAON,GACCjB,KAAKY,YACLZ,KAAKa,OAAOI,IAIpBtB,EAAAQ,UAAAU,OAAA,SAAOW,GACHxB,KAAKJ,GAAGuB,cAAcM,MAAMC,OAAS,OACrC1B,KAAKJ,GAAGuB,cAAcM,MAAMC,OAAS1B,KAAKJ,GAAGuB,cAAcQ,aAAe,KAEtEC,WAAW5B,KAAKJ,GAAGuB,cAAcM,MAAMC,SAAWE,WAAW5B,KAAKJ,GAAGuB,cAAcM,MAAMI,YACzF7B,KAAKJ,GAAGuB,cAAcM,MAAMK,UAAY,SACxC9B,KAAKJ,GAAGuB,cAAcM,MAAMC,OAAS1B,KAAKJ,GAAGuB,cAAcM,MAAMI,WAGjE7B,KAAKJ,GAAGuB,cAAcM,MAAMM,SAAW,SAG3C/B,KAAKC,SAAS+B,KAAKR,GAAO,KAG9B7B,EAAAQ,UAAAM,YAAA,WACIT,KAAKc,oBAEDd,KAAKY,YACLZ,KAAKa,UAIblB,EAAAQ,UAAA8B,YAAA,WACQjC,KAAKM,qBACLN,KAAKM,oBAAoB4B,cAGzBlC,KAAKU,uBACLV,KAAKU,sBAAsBwB,wCApGtCC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVC,KAAM,CACFC,0BAA2B,OAC3BC,sBAAuB,OACvBC,sBAAuB,OACvBC,mBAAoB,SACpBC,oCAAqC,2DAZlBC,EAAAA,kBACnBC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KA4ByBC,EAAAA,kBA5BvBC,EAAAA,UAASH,WAAA,CAAA,CAAAC,KA4BmDC,EAAAA,kBA7B6CE,EAAAA,yDAiBrHC,EAAAA,wBAEAC,EAAAA,wBAkCAC,EAAAA,aAAYjB,KAAA,CAAC,QAAS,CAAC,4BASvBiB,EAAAA,aAAYjB,KAAA,CAAC,QAAS,CAAC,2BAOvBiB,EAAAA,aAAYjB,KAAA,CAAC,OAAQ,CAAC,oBA8C3B,iCALCkB,EAAAA,SAAQlB,KAAA,CAAC,CACNmB,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC9D,GACV+D,aAAc,CAAC/D","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output, EventEmitter,Optional, AfterViewInit, OnInit, OnDestroy, ChangeDetectorRef} from '@angular/core';\r\nimport {NgModel, NgControl} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[pInputTextarea]',\r\n    host: {\r\n        '[class.p-inputtextarea]': 'true',\r\n        '[class.p-inputtext]': 'true',\r\n        '[class.p-component]': 'true',\r\n        '[class.p-filled]': 'filled',\r\n        '[class.p-inputtextarea-resizable]': 'autoResize'\r\n    }\r\n})\r\nexport class InputTextarea implements OnInit, AfterViewInit, OnDestroy  {\r\n    \r\n    @Input() autoResize: boolean;\r\n    \r\n    @Output() onResize: EventEmitter<any> = new EventEmitter();\r\n        \r\n    filled: boolean;\r\n\r\n    cachedScrollHeight:number;\r\n\r\n    ngModelSubscription: Subscription;\r\n\r\n    ngControlSubscription: Subscription;\r\n\r\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl, private cd: ChangeDetectorRef) {}\r\n        \r\n    ngOnInit() {\r\n        if (this.ngModel) {\r\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\r\n                this.updateState();\r\n            })\r\n        }\r\n\r\n        if (this.control) {\r\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\r\n                this.updateState();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.autoResize)\r\n            this.resize();\r\n\r\n        this.updateFilledState();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    @HostListener('input', ['$event'])\r\n    onInput(e) {\r\n        this.updateState();\r\n    }\r\n    \r\n    updateFilledState() {\r\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\r\n    }\r\n    \r\n    @HostListener('focus', ['$event'])\r\n    onFocus(e) {\r\n        if (this.autoResize) {\r\n            this.resize(e);\r\n        }\r\n    }\r\n    \r\n    @HostListener('blur', ['$event'])\r\n    onBlur(e) {\r\n        if (this.autoResize) {\r\n            this.resize(e);\r\n        }\r\n    }\r\n    \r\n    resize(event?: Event) {\r\n        this.el.nativeElement.style.height = 'auto';\r\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\r\n\r\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\r\n            this.el.nativeElement.style.overflowY = \"scroll\";\r\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\r\n        }\r\n        else {\r\n            this.el.nativeElement.style.overflow = \"hidden\";\r\n        }\r\n\r\n        this.onResize.emit(event||{});\r\n    }\r\n\r\n    updateState() {\r\n        this.updateFilledState();\r\n            \r\n        if (this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.ngModelSubscription) {\r\n            this.ngModelSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this.ngControlSubscription) {\r\n            this.ngControlSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputTextarea],\r\n    declarations: [InputTextarea]\r\n})\r\nexport class InputTextareaModule { }\r\n"]}